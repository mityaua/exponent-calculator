{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\exponent-calculator\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport s from './Form.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  number: '',\n  exponent: ''\n}; // Form component\n\nexport default function Form({\n  onSubmit\n}) {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const {\n    number,\n    exponent\n  } = state; // Inputs handler\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prev => ({ ...prev,\n      [name]: value\n    }));\n  }; // Form submit func\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = Math.pow(number, exponent);\n    const normalizedResult = new Intl.NumberFormat('en-En', {\n      maximumSignificantDigits: 3\n    }).format(result);\n    onSubmit(normalizedResult);\n  }; // Form reset func\n\n\n  const resetForm = () => {\n    setState(initialState);\n    onSubmit('', '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Number\",\n        type: \"number\",\n        name: \"number\",\n        value: number,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Exponent\",\n        type: \"number\",\n        name: \"exponent\",\n        value: exponent,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        color: \"primary\",\n        \"aria-label\": \"outlined primary button group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          type: \"submit\",\n          title: \"Calculate result\",\n          \"aria-label\": \"Calculate result\",\n          disabled: !number || !exponent,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), (number !== '' || exponent !== '') && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetForm,\n          title: \"Reset result\",\n          \"aria-label\": \"Reset result\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = Form;\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/exponent-calculator/src/components/Form/Form.jsx"],"names":["PropTypes","useState","TextField","ButtonGroup","Button","s","initialState","number","exponent","Form","onSubmit","state","setState","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","result","Math","pow","normalizedResult","Intl","NumberFormat","maximumSignificantDigits","format","resetForm","container","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport s from './Form.module.scss';\n\nconst initialState = {\n  number: '',\n  exponent: '',\n};\n\n// Form component\nexport default function Form({ onSubmit }) {\n  const [state, setState] = useState(initialState);\n  const { number, exponent } = state;\n\n  // Inputs handler\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Form submit func\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const result = Math.pow(number, exponent);\n\n    const normalizedResult = new Intl.NumberFormat('en-En', {\n      maximumSignificantDigits: 3,\n    }).format(result);\n\n    onSubmit(normalizedResult);\n  };\n\n  // Form reset func\n  const resetForm = () => {\n    setState(initialState);\n    onSubmit('', '');\n  };\n\n  return (\n    <div className={s.container}>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          label=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n\n        <br />\n        <br />\n\n        <TextField\n          label=\"Exponent\"\n          type=\"number\"\n          name=\"exponent\"\n          value={exponent}\n          onChange={handleChange}\n          required\n        />\n\n        <br />\n        <br />\n\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            type=\"submit\"\n            title=\"Calculate result\"\n            aria-label=\"Calculate result\"\n            disabled={!number || !exponent}\n          >\n            Calculate\n          </Button>\n\n          {(number !== '' || exponent !== '') && (\n            <Button\n              onClick={resetForm}\n              title=\"Reset result\"\n              aria-label=\"Reset result\"\n            >\n              Reset\n            </Button>\n          )}\n        </ButtonGroup>\n      </form>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}